##############################################################################################
#
# Travis CI configuration file
# 
# Set the required secrets in the build settings of the project:
#   - BINTRAY_USER
#   - BINTRAY_API_KEY
#
##############################################################################################
env:
  global:
  - PACKAGE_NAME=rpm-builder-bintray
  - BINTRAY_REPO_NAME=rpm
  - BINTRAY_LICENSE=LGPL-2.1

addons:
  apt:
    packages:
    - rpm

before_install:
  # Export variables containing versions and filename
  - export RELEASE_VERSION=$(cat VERSION)
  - export BUILD_VERSION=$RELEASE_VERSION.$TRAVIS_BUILD_NUMBER
  - export BUILD_DATE=$(date "+%Y%m%d")
  - export PACKAGE_NAME_VERSION=$PACKAGE_NAME-$BUILD_VERSION.rpm

script:
  # Replace version and build number with the RPM .spec file
  - sed -i "s/__VERSION__/$BUILD_VERSION/g" $PACKAGE_NAME/*.spec
  - sed -i "s/__DATE__/$BUILD_DATE/g" $PACKAGE_NAME/*.spec
  # Create the RPM package
  - cd $PACKAGE_NAME
  - rpmbuild -bb rpm.spec
  - mv $PACKAGE_NAME.rpm $PACKAGE_NAME_VERSION

after_success:
  # Output detail on the resulting package for debugging purpose
  - ls -l $PACKAGE_NAME_VERSION
  - dpkg --contents $PACKAGE_NAME_VERSION
  - md5sum $PACKAGE_NAME_VERSION
  - sha256sum $PACKAGE_NAME_VERSION
  - export LOCAL_SHA256=$( sha256sum $PACKAGE_NAME_VERSION | cut -d " " -f1 )

before_deploy:
  # Set the packages name and details in the descriptor file
  - sed -i "s/__NAME__/$PACKAGE_NAME/g" bintray-descriptor.json
  - sed -i "s/__REPO_NAME__/$BINTRAY_REPO_NAME/g" bintray-descriptor.json
  - sed -i "s/__SUBJECT__/$BINTRAY_USER/g" bintray-descriptor.json
  - sed -i "s/__LICENSE__/$BINTRAY_LICENSE/g" bintray-descriptor.json
  - sed -i "s/__VERSION__/$BUILD_VERSION/g" bintray-descriptor.json

deploy:
  # Upload RPM packages to Bintray
  provider: bintray
  file: bintray-descriptor.json
  user: $BINTRAY_USER
  key: $BINTRAY_API_KEY
  skip_cleanup: true

after_deploy:
  # Add time delay to let the servers process the uploaded files
  - sleep 180
  # Retrieve SHA256 sum and compare with local sum to ensure correct file uploaded
  - export REMOTE_SHA256=$(curl -L -v --silent https://bintray.com/$BINTRAY_USER/$BINTRAY_REPO_NAME/download_file?file_path=Packages.gz | zcat | grep -A 3 $PACKAGE_NAME_VERSION | grep SHA256 | cut -d " " -f2)
  - echo "REMOTE_SHA256: $REMOTE_SHA256"
  - >
    if [[ "$LOCAL_SHA256" != "$REMOTE_SHA256" ]]; then
      echo "SHA256 sums don't match: $LOCAL_SHA256 vs $REMOTE_SHA256"
      travis_terminate 1;
    fi
  # Place link to the file in download list
  - |
    curl --silent --show-error --fail\
    -X PUT -H "Content-Type: application/json" -d'{"list_in_downloads": true}'\
    -u$BINTRAY_USER:$BINTRAY_API_KEY https://api.bintray.com/file_metadata/$BINTRAY_USER/$BINTRAY_REPO_NAME/$PACKAGE_NAME_VERSION
